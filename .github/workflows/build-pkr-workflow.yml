name: Packer Build

on:
  pull_request:
    branches:
      - main

jobs:
  build_packer:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    env:
        PORT: ${{ secrets.PORT }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
        DATABASE_DIALECT: ${{ secrets.DATABASE_DIALECT }}
        DROP_DATABASE: ${{ secrets.DROP_DATABASE }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Postgres
      run: |
        sudo apt update
        sudo apt install -y postgresql postgresql-contrib
        sudo systemctl start postgresql.service

        sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.DATABASE_NAME }};"
        sudo -u postgres psql -c "CREATE USER ${{ secrets.DATABASE_USERNAME }} WITH PASSWORD '${{ secrets.DATABASE_PASSWORD }}';"
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ${{ secrets.DATABASE_NAME }} TO ${{ secrets.DATABASE_USERNAME}};"
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependecies and run tests
      run: | 
        npm install
        npm run test

    - name: Create env
      run: |
        touch .env
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
        echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
        echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
        echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
        echo "DATABASE_DIALECT=${{ secrets.DATABASE_DIALECT }}" >> .env
        echo "DROP_DATABASE=${{ secrets.DROP_DATABASE }}" >> .env
        cat .env

    - name: Delete node_modules for faster creation of artifact
      run: rm -r node_modules

    - name: Zip webapp
      run: cd ../ && zip -r webapp.zip webapp && cd - && cp ../webapp.zip .

    - name: Install Packer
      run: sudo apt install -y packer    
    
    - name: GCP Authentication
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: GCloud Info
      run: gcloud info

    - name: Setup Packer
      uses: hashicorp/setup-packer@main
      with:
        version: '1.10.1'

    - name: Packer Init
      run: packer init ./packer

    - name: Packer Build
      run: packer build -var 'proj_id=${{ secrets.GCP_PROJ_ID }}' ./packer