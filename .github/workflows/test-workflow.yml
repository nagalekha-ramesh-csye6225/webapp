name: Test-Workflow

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  test-workflow:
    runs-on: ubuntu-latest

    env:
        PORT: ${{ secrets.PORT }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
        DATABASE_DIALECT: ${{ secrets.DATABASE_DIALECT }}
        DROP_DATABASE: ${{ secrets.DROP_DATABASEÂ }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Postgres
        run: |
            sudo apt update
            sudo apt install -y postgresql postgresql-contrib
            sudo systemctl start postgresql.service

            sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.DATABASE_NAME }};"
            sudo -u postgres psql -c "CREATE USER ${{ secrets.DATABASE_USERNAME }} WITH PASSWORD '${{ secrets.DATABASE_PASSWORD }}';"
            sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ${{ secrets.DATABASE_NAME }} TO ${{ secrets.DATABASE_USERNAME}};"
      - name: Use Node.js
        uses: actions/setup-node@v4
      - run: npm install
      - name: Run tests
        run: npm run test
